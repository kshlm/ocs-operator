apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |
      [
          {
              "apiVersion": "ocs.openshift.io/v1alpha1",
              "kind": "StorageCluster",
              "metadata": {
                  "name": "example-storagecluster",
                  "namespace": "openshift-storage"
              },
              "spec": {
                  "manageNodes": false
              }{{if .Converged}}
          },
          {
              "apiVersion": "ceph.rook.io/v1",
              "kind": "CephCluster",
              "metadata": {
                  "name": "my-rook-ceph",
                  "namespace": "my-rook-ceph"
              },
              "spec": {
                  "cephVersion": {
                      "image": "ceph/ceph:v14.2.1-20190430"
                  },
                  "dataDirHostPath": "/var/lib/rook",
                  "mon": {
                      "count": 3
                  },
                  "dashboard": {
                      "enabled": true
                  },
                  "network": {
                      "hostNetwork": false
                  },
                  "rbdMirroring": {
                      "workers": 0
                  },
                  "storage": {
                      "useAllNodes": true,
                      "useAllDevices": true
                  }
              }
          },
          {
              "apiVersion": "ceph.rook.io/v1",
              "kind": "CephBlockPool",
              "metadata": {
                  "name": "replicapool",
                  "namespace": "my-rook-ceph"
              },
              "spec": {
                  "failureDomain": "host",
                  "replicated": {
                      "size": 3
                  },
                  "annotations": null
              }
          },
          {
              "apiVersion": "ceph.rook.io/v1",
              "kind": "CephObjectStore",
              "metadata": {
                  "name": "my-store",
                  "namespace": "my-rook-ceph"
              },
              "spec": {
                  "metadataPool": {
                      "failureDomain": "host",
                      "replicated": {
                          "size": 3
                      }
                  },
                  "dataPool": {
                      "failureDomain": "host",
                      "replicated": {
                          "size": 3
                      }
                  },
                  "gateway": {
                      "type": "s3",
                      "sslCertificateRef": null,
                      "port": 8080,
                      "securePort": null,
                      "instances": 1,
                      "allNodes": false,
                      "placement": null,
                      "annotations": null,
                      "resources": null
                  }
              }
          },
          {
              "apiVersion": "ceph.rook.io/v1",
              "kind": "CephObjectStoreUser",
              "metadata": {
                  "name": "my-user",
                  "namespace": "my-rook-ceph"
              },
              "spec": {
                  "store": "my-store",
                  "displayName": "my display name"
              }{{end}}
          }
      ]
    capabilities: Full Lifecycle
    categories: Storage
  name: ocs-operator.v{{.CsvVersion}}
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
      # OCS CRDs
    - kind: StorageCluster
      name: storageclusters.ocs.openshift.io
      version: v1alpha1
      displayName: Storage Cluster
      description: Storage Cluster represents a Rook Ceph storage cluster including all the storage and compute resources required.
    - kind: OCSInitialization
      name: ocsinitializations.ocs.openshift.io
      version: v1alpha1
      displayName: OCS Initialization
      description: OCS Initialization represents the initial data to be created when the OCS operator is installed
{{if .Converged}}
      # Rook-Ceph CRDs
    - kind: {{(index .RCO.CRDs "cephclusters.ceph.rook.io").Spec.Names.Kind}}
      name: {{(index .RCO.CRDs "cephclusters.ceph.rook.io").ObjectMeta.Name}}
      version: {{(index .RCO.CRDs "cephclusters.ceph.rook.io").Spec.Version}}
      displayName: Ceph Cluster
      description: Represents a Ceph cluster.
    - kind: {{(index .RCO.CRDs "cephblockpools.ceph.rook.io").Spec.Names.Kind}}
      name: {{(index .RCO.CRDs "cephblockpools.ceph.rook.io").ObjectMeta.Name}}
      version: {{(index .RCO.CRDs "cephblockpools.ceph.rook.io").Spec.Version}}
      displayName: Ceph Block Pool
      description: Represents a Ceph Block Pool.
    - kind: {{(index .RCO.CRDs "cephobjectstores.ceph.rook.io").Spec.Names.Kind}}
      name: {{(index .RCO.CRDs "cephobjectstores.ceph.rook.io").ObjectMeta.Name}}
      version: {{(index .RCO.CRDs "cephobjectstores.ceph.rook.io").Spec.Version}}
      displayName: Ceph Object Store
      description: Represents a Ceph Object Store.
    - kind: {{(index .RCO.CRDs "cephobjectstoreusers.ceph.rook.io").Spec.Names.Kind}}
      name: {{(index .RCO.CRDs "cephobjectstoreusers.ceph.rook.io").ObjectMeta.Name}}
      version: {{(index .RCO.CRDs "cephobjectstoreusers.ceph.rook.io").Spec.Version}}
      displayName: Ceph Object Store User
      description: Represents a Ceph Object Store User.
      # NooBaa CRDs
    - kind: {{(index .NBO.CRDs "noobaas.noobaa.io").Spec.Names.Kind}}
      name: {{(index .NBO.CRDs "noobaas.noobaa.io").ObjectMeta.Name}}
      version: {{(index .NBO.CRDs "noobaas.noobaa.io").Spec.Version}}
      displayName: NooBaa
      description: NooBaa provides a flexible S3 data service backed by any storage resource for hybrid and multi-cloud environments
      resources:
        - kind: Service
          version: v1
        - kind: StatefulSet
          version: v1
        - kind: Secret
          version: v1
    - kind: {{(index .NBO.CRDs "backingstores.noobaa.io").Spec.Names.Kind}}
      name: {{(index .NBO.CRDs "backingstores.noobaa.io").ObjectMeta.Name}}
      version: {{(index .NBO.CRDs "backingstores.noobaa.io").Spec.Version}}
      displayName: Backing Store
      description: Add backing stores to customize the data placement locations.
    - kind: {{(index .NBO.CRDs "bucketclasses.noobaa.io").Spec.Names.Kind}}
      name: {{(index .NBO.CRDs "bucketclasses.noobaa.io").ObjectMeta.Name}}
      version: {{(index .NBO.CRDs "bucketclasses.noobaa.io").Spec.Version}}
      displayName: Bucket Class
      description: Add bucket classes to customize the data placement locations.
{{end}}
  description: |
    Red Hat Openshift Container Storage (OCS) provides hyperconverged storage for applications within an Openshift cluster.
    The OCS operator is the primary operator for Red Hat OpenShift Container Storage (OCS). It serves to facilitate the other operators in OCS by performing administrative tasks outside their scope as well as watching and configuring their CustomResources.
  displayName: Openshift Container Storage Operator
  install:
    strategy: deployment
    spec:
      deployments:
      # OCS-operator deployment
      - name: ocs-operator
        spec:
{{.OCS.DeploymentSpec}}
{{if .Converged}}
      # Rook-ceph deployment
      - name: rook-ceph-operator
        spec:
{{.RCO.DeploymentSpec}}
      # NooBaa operator deployment
      - name: noobaa-operator
        spec:
{{.NBO.DeploymentSpec}}
{{end}}
      permissions:
      # OCS operator permissions
      - serviceAccountName: ocs-operator
        rules:
{{index .OCS.RoleRules "ocs-operator"}}
{{if .Converged}}
      # Rook-Ceph permissions
{{ range $key, $value := .RCO.RoleRules }}
      - serviceAccountName: {{$key}}
        rules:
{{$value}}
{{end}}
      # NooBaa permissions
{{ range $key, $value := .NBO.RoleRules }}
      - serviceAccountName: {{$key}}
        rules:
{{$value}}
{{end}}
{{end}}
{{if .Converged}}
      clusterPermissions:
      # Rook-Ceph cluster permissions
{{ range $key, $value := .RCO.ClusterRoleRules }}
      - serviceAccountName: {{$key}}
        rules:
{{$value}}
{{end}}
      # NooBaa operator cluster permissions
{{ range $key, $value := .NBO.ClusterRoleRules }}
      - serviceAccountName: {{$key}}
        rules:
{{$value}}
{{end}}
{{end}}
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  maturity: alpha
  version: {{.CsvVersion}}{{if .Replaces}}
  replaces: ocs-operator.v{{.ReplacesVersion}}{{end}}
  minKubeVersion: v1.13.0
  provider:
    name: Red Hat
  maintainers:
  - name: Jose Rivera
    email: jarrpa@redhat.com
  - name: Kaushal M
    email: kaushal@redhat.com
  links:
  - name: Source Code
    url: https://github.com/openshift/ocs-operator
  keywords:
  - storage
  - rook
  - ceph
  - noobaa
  - block storage
  - shared filesystem
  - object storage
